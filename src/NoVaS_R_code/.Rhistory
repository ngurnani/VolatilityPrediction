p = 5
n = 100
yy <- c(1:(2 * p + n)) * 0
length(yy)
xx = runif(100)
yy[(2*p + 1):(2*p + n)] <- xx
yy
yy <- as.ts(yy)
yy
kk <- 0 * yy
for(i in 0:(p - 1)) {
kk <- kk + lag(yy^2,  - i)
}
kk
lag(yy^2, -0)
lag(yy^2, -1)
length(lag(yy^2, -1))
lag(yy^2, -2)
xx <- c(1,2,3,4,5,6,7,8,9,10)
xx
p <- 3
n <- length(xx)
yy <- c(1:(2*p+n)) * 0
yy[(2*p+1):(2*p+n)] <- xx
yy
yy <- as.ts(yy)
yy
kk <- 0*yy
kk
lag(yy,1)
temp <- lag(yy,1) + 1
temp
length(temp)
lag(yy,-1)
lag(yy,-2)
temp <- lag(yy,-2) + 1
temp
for(i in 0:(p-1)) { print i}
for(i in 0:(p-1)) {i}
for(i in 0:(p-1)) {disp(i)}
for(i in 0:(p-1)) {print(i)}
kk
kk
kk <- kk + lag(yy^2, -0)
kk
length(kk)
length(yy^2)
for(i in 0:(p - 1)) {
kk <- kk + lag(yy^2,  - i)
}
kk <- 0 * yy
for(i in 0:(p - 1)) {
kk <- kk + lag(yy^2,  - i)
}
zz <- yy/sqrt(kk/p)
zz
length(zz)
zz<- zz[(2*p+1):(2*p+n)]
zz
zz <- na.omit(zz)
zz[1]
sign(zz[1])
data <- read.csv("sp500returns.csv")
View(data)
View(data)
data <- read.csv("sp500returns.csv", header=FALSE)
data[,2]
VARSTABdp<-function(xx, p, alp)
{ # xx is financial returns series (percentage returns)
# the output is the transformed series using simple NoVaS
# note that first p-1 entries of the output are unreliable
# Here we have is average of p values (not p+1 as in the 2007 paper)
# i.e., if the algorithm below indicates p=10, then it is a_0 and p=9 more
n <- length(xx)
yy <- c(1:(2 * p + n)) * 0
yy[(2 * p + 1):(2 * p + n)] <- xx
yy <- as.ts(yy)
kk <- 0 * yy
for(i in 0:(p - 1)) {
kk <- kk + lag(yy^2,  - i)
}
V = var(xx[1:(n-1)], na.rm = T)
zz <- yy/sqrt(alp*V+kk/p)    # zz_as.vector(zz)
zz<- zz[(2*p+1):(2*p+n)]
zz <- na.omit(zz)
zz[1] <- sign(zz[1])
zz
}
xx <- data[,2]
temp_transformed = VARSTABdp(xx,10,0)
KURTOSIS<-function(x)
{ # regular definition
mm <- mean(x, na.rm = T)
s2 <- mean((x - mm)^2, na.rm = T)
kk <- mean((x - mm)^4, na.rm = T)
kk <- kk/s2^2
kk
}
KURTOSIS(temp_transformed)
plot(temp_transformed)
temp = as.ts(temp_transformed)
plot(temp)
temp_transformed = VARSTABdp(xx,13,0)
temp_transformed = VARSTABdp(xx,12,0)
KURTOSIS(temp_transformed)
temp_transformed = VARSTABdp(xx,14,0)
KURTOSIS(temp_transformed)
temp_transformed = VARSTABdp(xx,15,0)
KURTOSIS(temp_transformed)
VARSTABdp<-function(xx, p)
{ # xx is financial returns series (percentage returns)
# the output is the transformed series using simple NoVaS
# note that first p-1 entries of the output are unreliable
# Here we have is average of p values (not p+1 as in the 2007 paper)
# i.e., if the algorithm below indicates p=10, then it is a_0 and p=9 more
n <- length(xx)
yy <- c(1:(2 * p + n)) * 0
yy[(2 * p + 1):(2 * p + n)] <- xx
yy <- as.ts(yy)
kk <- 0 * yy
for(i in 0:(p - 1)) {
kk <- kk + lag(yy^2,  - i)
}
zz <- yy/sqrt(kk/p)    # zz_as.vector(zz)
#   zz_zz[(2*p+1):(2*p+n)]
zz <- na.omit(zz)
zz[1] <- sign(zz[1])
zz
}
temp = VARSTABdp(xx,15)
KURTOSIS(temp)
View(KURTOSIS)
xx <- runif(20)
p = 5
n = length(xx)
yy = c(1:(2*p+n))*0
length(yy)
